{"version":3,"sources":["Registration/Registration.js","Login/Login.js","MyContext.js","ProductInfo/AddMovie.js","ProductInfo/EditForm.js","ProductInfo/EditMovie.js","ProductInfo/ProductInfo.js","MovieList/NowShowing.js","MovieList/ComingSoon.js","MovieList/Cinemas.js","MovieList/Tickets.js","MovieList/PurchaseBox.js","MovieList/MovieList.js","MovieList/Seats.js","Search/SearchBox.js","HomePage.js","App.js","serviceWorker.js","MyProvider.js","index.js"],"names":["Registration","state","username","password","confirmPassword","usernameError","passwordError","confirmPasswordError","inputChangeHandler","e","setState","target","name","value","register","axios","post","role","then","res","props","userCredential","alert","id","className","type","onChange","this","to","onClick","React","Component","Login","login","trim","MyContext","createContext","AddMovie","movieName","image","location","status","rating","genre","casts","description","price","cinemaNo","publishFrom","publishTo","startTime","dataChangeHandler","arrayHandler","items","split","publishChangeHandler","Date","addMovieBtnHandler","newMovie","cinema","start","addMovieBtn","ticketPrice","htmlFor","rows","EditForm","movie","changeData","setArray","changePublish","submitEditBtn","put","_id","updateMovie","data","slice","removeMovie","EditMovie","useContext","editForm","movies","map","path","key","allMovies","ProductInfo","NowShowing","src","alt","purchaseBtn","ComingSoon","showDate","Cinemas","hall","Tickets","qtyChangeHandler","ticket","qty","subTotal","PurchaseBox","purchaseOffBtn","tickets","total","checkoutBtn","purchases","purchaseTotal","length","Fragment","MovieList","cinemas","purchaseOn","purchaseOnBtn","movieCinema","filterNowShowing","filter","filterComingSoon","nowShowing","comingSoon","Seats","seats","date","dateChangeHandler","match","params","cinemaSeats","seat","min","max","SearchBox","useState","search","setSearch","placeholder","newSearch","console","log","HomePage","moviesArray","App","isLoggedin","userLogin","logout","user","selectedSeat","render","exact","Boolean","window","hostname","MyProvider","error","localStorage","setItem","JSON","stringify","removeItem","updatedMovies","remainedMovie","splice","indexOf","delete","purchasedTicket","newTicket","ticketIndex","findIndex","ticketsCopy","cloneDeep","totalPrice","newTotal","getItem","parse","searchBtn","Provider","children","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b9a4d250.chunk.js","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Registration extends React.Component {\r\n\r\n    state = {\r\n        username: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        usernameError: \"\",\r\n        passwordError: \"\",\r\n        confirmPasswordError: \"\"\r\n    }\r\n\r\n    inputChangeHandler = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    register = () => {\r\n        if(this.state.username === \"\") {\r\n            this.setState({\r\n                usernameError: \"This field is required\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                usernameError: \"\"\r\n            })\r\n        }\r\n        if(this.state.password === \"\") {\r\n            this.setState({\r\n                passwordError: \"This field is required\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                passwordError: \"\"\r\n            })\r\n        }\r\n        if(this.state.confirmPassword !== this.state.password) {\r\n            this.setState({\r\n                confirmPasswordError: \"Password didn't match\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                confirmPasswordError: \"\"\r\n            })\r\n        }\r\n        if((this.state.username !== \"\") && (this.state.password !== \"\") && (this.state.password === this.state.confirmPassword)) {\r\n            axios.post(\"https://movie-booking-server.herokuapp.com/register\", {\r\n                username: this.state.username,\r\n                password: this.state.password,\r\n                role: \"User\"\r\n            }).then(res => {\r\n                this.props.userCredential(this.state.username, this.state.password);\r\n                this.setState({\r\n                    username: \"\",\r\n                    password: \"\",\r\n                    confirmPassword: \"\"\r\n                })\r\n            })\r\n            alert(\"Registration successful!\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div id=\"registration-form\">\r\n                <h4>Register</h4>\r\n                <div className=\"form-input\">\r\n                    <label>Username: </label>\r\n                    <input type=\"text\" name=\"username\" onChange={this.inputChangeHandler}/>\r\n                </div>\r\n                <div className=\"error-msg\">\r\n                    <small>{this.state.usernameError}</small>\r\n                </div>\r\n                <div className=\"form-input\">\r\n                    <label>Password: </label>\r\n                    <input type=\"password\" name=\"password\" onChange={this.inputChangeHandler}/>\r\n                </div>\r\n                <div className=\"error-msg\">\r\n                    <small>{this.state.passwordError}</small>\r\n                </div>\r\n                <div className=\"form-input\">\r\n                    <label>Confirm Password: </label>\r\n                    <input type=\"password\" name=\"confirmPassword\" onChange={this.inputChangeHandler}/>\r\n                </div>\r\n                <div className=\"error-msg\">\r\n                    <small>{this.state.confirmPasswordError}</small>\r\n                </div>\r\n                <Link to=\"/cinema\">\r\n                    <button onClick={this.register}>Register</button>\r\n                </Link>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Registration;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Login extends React.Component {\r\n\r\n    state = {\r\n        username: \"\",\r\n        password: \"\",\r\n        usernameError: \"\",\r\n        passwordError: \"\"\r\n    }\r\n\r\n    inputChangeHandler = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    login = () => {\r\n        if(this.state.username.trim() === \"\") {\r\n            this.setState({\r\n                usernameError: \"This field is required\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                usernameError: \"\"\r\n            })\r\n        }\r\n        if(this.state.password.trim() === \"\") {\r\n            this.setState({\r\n                passwordError: \"This field is required\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                passwordError: \"\"\r\n            })\r\n        }\r\n        if((this.state.username !== \"\") && (this.state.password !== \"\")) {\r\n            this.props.userCredential(this.state.username, this.state.password);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div id=\"login-form\">\r\n                <h4>Login</h4>\r\n                <div className=\"form-input\">\r\n                    <label>Username: </label>\r\n                    <input type=\"text\" name=\"username\" onChange={this.inputChangeHandler}/>\r\n                </div>\r\n                <div className=\"error-msg\">\r\n                    <small>{this.state.usernameError}</small>\r\n                </div>\r\n                <div className=\"form-input\">\r\n                    <label>Password: </label>\r\n                    <input type=\"password\" name=\"password\" onChange={this.inputChangeHandler}/>\r\n                </div>\r\n                <div className=\"error-msg\">\r\n                    <small>{this.state.passwordError}</small>\r\n                </div>\r\n                <Link to=\"/cinema\">\r\n                    <button onClick={this.login}>Login</button>\r\n                </Link>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Login;","import { createContext } from \"react\";\r\n\r\nconst MyContext = createContext();\r\n\r\nexport default MyContext;","import React from \"react\";\r\n\r\nclass AddMovie extends React.Component {\r\n\r\n    state = {\r\n        movieName: \"\",\r\n        image: \"\",\r\n        location: \"\",\r\n        status: \"\",\r\n        rating: \"\",\r\n        genre: [],\r\n        casts: [],\r\n        description: \"\",\r\n        price: null,\r\n        cinemaNo: null,\r\n        publishFrom: null,\r\n        publishTo: null,\r\n        startTime: \"\"\r\n    }\r\n\r\n    dataChangeHandler = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    arrayHandler = (e) => {\r\n        let items = e.target.value.split(\",\");\r\n        this.setState({\r\n            [e.target.name]: items\r\n        })\r\n    }\r\n\r\n    publishChangeHandler = (e) => {\r\n        this.setState({\r\n           [e.target.name]: new Date(e.target.value)\r\n        })\r\n    }\r\n\r\n    addMovieBtnHandler = () => {\r\n        let newMovie = {\r\n            name: this.state.movieName,\r\n            image: this.state.image,\r\n            location: this.state.location,\r\n            status: this.state.status,\r\n            price: this.state.price,\r\n            rating: this.state.rating,\r\n            genre: this.state.genre,\r\n            casts: this.state.casts,\r\n            description: this.state.description,\r\n            cinema: this.state.cinemaNo,\r\n            publishFrom: this.state.publishFrom,\r\n            publishTo: this.state.publishTo,\r\n            start: this.state.startTime\r\n        }\r\n        this.props.addMovieBtn(newMovie);\r\n        this.setState({\r\n            movieName: \"\",\r\n            image: \"\",\r\n            location: \"\",\r\n            status: \"\",\r\n            rating: \"\",\r\n            genre: [],\r\n            casts: [],\r\n            description: \"\"\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div id=\"add-movie\" className=\"clearfix\">\r\n                <h3>Add Movie</h3>\r\n                <div className=\"movie-info\">\r\n                    <label>Movie Name : </label>\r\n                    <input type=\"text\" name=\"movieName\" value={this.state.movieName} onChange={this.dataChangeHandler}/>\r\n                </div>\r\n                <div className=\"movie-info\">\r\n                    <label>Status : </label>\r\n                    <select name=\"status\" value={this.state.status} onChange={this.dataChangeHandler}>\r\n                        <option>Now Showing</option>\r\n                        <option>Coming Soon</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"movie-info\">\r\n                    <label>Ticket Price : Php </label>\r\n                    <input type=\"Number\" name=\"price\" value={this.state.ticketPrice} onChange={this.dataChangeHandler}/>\r\n                </div>\r\n                <div className=\"movie-info\">\r\n                    <label>Rating : </label>\r\n                    <input type=\"text\" name=\"rating\" value={this.state.rating} onChange={this.dataChangeHandler}/>\r\n                </div>\r\n                <div className=\"movie-info\">\r\n                    <label>Genre : </label>\r\n                    <input type=\"text\" name=\"genre\" value={this.state.genre} onChange={this.arrayHandler}/>\r\n                </div>\r\n                <div className=\"movie-info\">\r\n                    <label>Casts : </label>\r\n                    <input type=\"text\" name=\"casts\" value={this.state.casts} onChange={this.arrayHandler}/>\r\n                </div>\r\n                <div className=\"movie-info\">\r\n                    <label htmlFor=\"desc\">Description : </label>\r\n                    <textarea id=\"desc\" name=\"description\" rows=\"4\" \r\n                        value={this.state.description} \r\n                        onChange={this.dataChangeHandler}\r\n                    />\r\n                </div>\r\n                <div className=\"movie-info\">\r\n                    <label>Location : </label>\r\n                    <input type=\"text\" name=\"location\" onChange={this.dataChangeHandler}/>\r\n                </div>\r\n                <div className=\"movie-info\">\r\n                    <label>Cinema # : </label>\r\n                    <input type=\"number\" name=\"cinemaNo\" onChange={this.dataChangeHandler}/>\r\n                </div>\r\n                <div className=\"movie-info\">\r\n                    <label>Image : </label>\r\n                    <input type=\"text\" name=\"image\" onChange={this.dataChangeHandler}/>\r\n                </div>\r\n                <div className=\"movie-info\">\r\n                    <label>Publish From : </label>\r\n                    <input type=\"date\" name=\"publishFrom\" onChange={this.publishChangeHandler}/>\r\n                </div>\r\n                <div className=\"movie-info\">\r\n                    <label>Publish To : </label>\r\n                    <input type=\"date\" name=\"publishTo\" onChange={this.publishChangeHandler}/>\r\n                </div>\r\n                <div className=\"movie-info\">\r\n                    <label>Start Time : </label>\r\n                    <input type=\"time\" name=\"startTime\" onChange={this.dataChangeHandler}/>\r\n                </div>\r\n                <button onClick={this.addMovieBtnHandler}>Add</button>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default AddMovie;","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass EditForm extends React.Component {\r\n\r\n    state = {\r\n        movieName: this.props.movie.name,\r\n        image: this.props.movie.image,\r\n        location: this.props.movie.location,\r\n        status: this.props.movie.status,\r\n        price: this.props.movie.price,\r\n        rating: this.props.movie.rating,\r\n        genre: this.props.movie.genre,\r\n        casts: this.props.movie.casts,\r\n        description: this.props.movie.description,\r\n        cinemaNo: this.props.movie.cinema,\r\n        publishFrom: this.props.movie.publishFrom,\r\n        publishTo: this.props.movie.publishTo,\r\n        startTime: this.props.movie.startTime\r\n    }\r\n\r\n    changeData = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    setArray = (e) => {\r\n        let items = e.target.value.split(\",\");\r\n        this.setState({\r\n            [e.target.name]: items\r\n        })\r\n    }\r\n\r\n    changePublish = (e) => {\r\n        this.setState({\r\n           [e.target.name]: new Date(e.target.value)\r\n        })\r\n    }\r\n\r\n    submitEditBtn = () => {\r\n        axios.put(\"https://movie-booking-server.herokuapp.com/movies/\" + this.props.movie._id, {\r\n            name: this.state.movieName,\r\n            image: this.state.image,\r\n            location: this.state.location,\r\n            status: this.state.status,\r\n            price: this.state.price,\r\n            rating: this.state.rating,\r\n            genre: this.state.genre,\r\n            casts: this.state.casts,\r\n            description: this.state.description,\r\n            cinema: this.state.cinemaNo,\r\n            publishFrom: this.state.publishFrom,\r\n            publishTo: this.state.publishTo,\r\n            start: this.state.startTime\r\n        }).then(res => {\r\n            this.props.updateMovie(res.data);\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div id=\"edit-form\">\r\n                <div className=\"movie-info\">\r\n                    <label>Movie Name : </label>\r\n                    <input type=\"text\" name=\"movieName\" value={this.state.movieName} onChange={this.changeData}/>\r\n                </div>\r\n                <div className=\"movie-info\">\r\n                    <label>Status : </label>\r\n                    <select name=\"status\" value={this.state.status} onChange={this.changeData}>\r\n                        <option>Now Showing</option>\r\n                        <option>Coming Soon</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"movie-info\">\r\n                    <label>Ticket Price : </label>\r\n                    <input type=\"number\" name=\"price\" value={this.state.price} onChange={this.changeData}/>\r\n                </div>\r\n                <div className=\"movie-info\">\r\n                    <label>Rating : </label>\r\n                    <input type=\"text\" name=\"rating\" value={this.state.rating} onChange={this.changeData}/>\r\n                </div>\r\n                <div className=\"movie-info\">\r\n                    <label>Genre : </label>\r\n                    <input type=\"text\" name=\"genre\" value={this.state.genre} onChange={this.setArray}/>\r\n                </div>\r\n                <div className=\"movie-info\">\r\n                    <label>Casts : </label>\r\n                    <input type=\"text\" name=\"casts\" value={this.state.casts} onChange={this.setArray}/>\r\n                </div>\r\n                <div className=\"movie-info\">\r\n                    <label htmlFor=\"desc\">Description : </label>\r\n                    <textarea id=\"desc\" name=\"description\" rows=\"4\" \r\n                        value={this.state.description} \r\n                        onChange={this.changeData}\r\n                    />\r\n                </div>\r\n                <div className=\"movie-info\">\r\n                    <label>Location : </label>\r\n                    <input type=\"text\" name=\"location\" value={this.state.location} onChange={this.changeData}/>\r\n                </div>\r\n                <div className=\"movie-info\">\r\n                    <label>Cinema # : </label>\r\n                    <input type=\"number\" name=\"cinemaNo\" value={this.state.cinemaNo} onChange={this.changeData}/>\r\n                </div>\r\n                <div className=\"movie-info\">\r\n                    <label>Image : </label>\r\n                    <input type=\"text\" name=\"image\" value={this.state.image} onChange={this.changeData}/>\r\n                </div>\r\n                <div className=\"movie-info\">\r\n                    <label>Publish From : </label>\r\n                    <input type=\"date\" name=\"publishFrom\" onChange={this.changePublish}/>\r\n                    <span>{this.props.movie.publishFrom.slice(0, 10)}</span>\r\n                </div>\r\n                <div className=\"movie-info\">\r\n                    <label>Publish To : </label>\r\n                    <input type=\"date\" name=\"publishTo\" onChange={this.changePublish}/>\r\n                    <span>{this.props.movie.publishTo.slice(0, 10)}</span>\r\n                </div>\r\n                <div className=\"movie-info\">\r\n                    <label>Start Time : </label>\r\n                    <input type=\"time\" name=\"startTime\" onChange={this.changeData}/>\r\n                    <span>{this.props.movie.start}</span>\r\n                </div>\r\n                <button className=\"edit-btn\" onClick={this.submitEditBtn}>Edit</button>\r\n                <button className=\"delete-btn\" id={this.props.movie._id} onClick={this.props.removeMovie}>Delete</button>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default EditForm;","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Route } from \"react-router\";\r\nimport EditForm from \"./EditForm\";\r\nimport MyContext from \"../MyContext\";\r\n\r\nconst EditMovie = (props) => {\r\n\r\n    const {removeMovie} = useContext(MyContext);\r\n\r\n    const editForm = props.movies.map(movie => {\r\n        return(\r\n            <Route path={\"/edit-form/\" + movie.name} key={movie._id}>\r\n                <EditForm \r\n                movie={movie} \r\n                updateMovie={props.updateMovie} \r\n                removeMovie={removeMovie}\r\n                />\r\n            </Route>\r\n        )\r\n    })\r\n\r\n    const allMovies = props.movies.map(movie => {\r\n        return(\r\n            <Link to={\"/edit-form/\" + movie.name} key={movie._id}>\r\n                <div className=\"movie-info\">\r\n                    <div>{movie.name}</div>\r\n                    <div className=\"movie-status\">{movie.status}</div>\r\n                </div>\r\n            </Link>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <div id=\"edit-movie\">\r\n            <h3>Edit Movie</h3>\r\n            <Link to=\"/edit-movie\">Edit/Remove</Link>\r\n            <Route path=\"/edit-movie\">{allMovies}</Route>\r\n            {editForm}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default EditMovie;","import React from \"react\";\r\nimport AddMovie from \"./AddMovie\";\r\nimport EditMovie from \"./EditMovie\";\r\n\r\nconst ProductInfo = (props) => {\r\n\r\n    return(\r\n        <div id=\"product-info\">\r\n            <AddMovie addMovieBtn={props.addMovieBtn}/>\r\n            <EditMovie movies={props.movies} updateMovie={props.updateMovie}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProductInfo;","import React from \"react\";\r\nimport { Route } from \"react-router\";\r\n\r\nconst NowShowing = (props) => {\r\n    \r\n    return(\r\n        <Route path=\"/now-showing\">\r\n            <div id=\"now-showing\" className=\"clearfix\">\r\n                <h4>{props.movie}</h4>\r\n                <img className=\"movie-img\" src={props.image} alt={props.movie}/>\r\n                <p><small className=\"label\">Genre: </small>{props.genre}</p>\r\n                <p><small className=\"label\">Rating: </small>{props.rating}</p>\r\n                <p><small className=\"label\">Casts: </small>{props.casts}</p>\r\n                <p><small className=\"label\">Description: </small>{props.description}</p>\r\n                <p><small className=\"label\">Status: </small>{props.status}</p>\r\n                <button className=\"buyoutBtn\" id={props.id} onClick={props.purchaseBtn}>Buy Ticket</button>\r\n            </div>\r\n            <hr/>\r\n        </Route>\r\n    )\r\n\r\n}\r\n\r\nexport default NowShowing;","import React from \"react\";\r\nimport { Route } from \"react-router\";\r\n\r\nconst ComingSoon = (props) => {\r\n\r\n    let showDate = props.showDate.slice(0, 10);\r\n\r\n    return(\r\n        <Route path=\"/coming-soon\">\r\n            <div id=\"coming-soon\">\r\n                <h4>{props.movie}</h4>\r\n                <img className=\"movie-img\" src={props.image} alt={props.movie}/>\r\n                <p><small className=\"label\">Genre: </small>{props.genre}</p>\r\n                <p><small className=\"label\">Rating: </small>{props.rating}</p>\r\n                <p><small className=\"label\">Casts: </small>{props.casts}</p>\r\n                <p><small className=\"label\">Description: </small>{props.description}</p>\r\n                <p><small className=\"label\">Status: </small>{props.status}</p>\r\n                <p><small className=\"label\">Show Date: </small>{showDate}</p>\r\n            </div>\r\n            <hr/>\r\n        </Route>\r\n    )\r\n\r\n}\r\n\r\nexport default ComingSoon;","import React from \"react\";\r\nimport { Route } from \"react-router\";\r\n\r\nconst Cinemas = (props) => {\r\n\r\n    return(\r\n        <div id=\"cinemas\" className=\"clearfix\">\r\n            <Route path=\"/cinema\">\r\n                {props.cinema} || {props.hall} || {props.movie.name}\r\n            </Route>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Cinemas;","import React, { useContext } from \"react\";\r\nimport MyContext from \"../MyContext\";\r\n\r\nconst Tickets = (props) => {\r\n\r\n    const {qtyChangeHandler} = useContext(MyContext);\r\n\r\n    let inputChangeHandler = (e) => {\r\n        qtyChangeHandler(props.ticket._id, (e.target.value * 1));\r\n    }\r\n\r\n    return(\r\n        <div id=\"tickets\">\r\n            <div>{props.ticket.name}</div>\r\n            <input type=\"number\" value={props.ticket.qty} onChange={inputChangeHandler}/>\r\n            <div>{props.ticket.subTotal}</div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Tickets;","import React, { useContext } from \"react\";\r\nimport MyContext from \"../MyContext\";\r\nimport Tickets from \"./Tickets\";\r\n\r\nconst PurchaseBox = () => {\r\n\r\n    const {\r\n        purchaseOffBtn,\r\n        tickets,\r\n        total,\r\n        checkoutBtn\r\n    } = useContext(MyContext);\r\n\r\n    let purchases = null;\r\n    let purchaseTotal = null;\r\n\r\n    if(tickets.length > 0) {\r\n        purchases = tickets.map(ticket => {\r\n            return(\r\n                <Tickets key={ticket.name} ticket={ticket}/>\r\n            )\r\n        })\r\n        purchaseTotal = (\r\n            <div>\r\n                <hr/>\r\n                <div>\r\n                    Total: <span>Php {total}</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {\r\n                tickets.length > 0 ?\r\n                <div id=\"purchase-box\">\r\n                    <h3>\r\n                        Tickets\r\n                        <button onClick={purchaseOffBtn} id=\"close-cart\">X</button>\r\n                    </h3>\r\n                    <div className=\"tickets\">{purchases}</div>\r\n                    {purchaseTotal}\r\n                    {\r\n                        purchaseTotal !== null ?\r\n                        <button onClick={checkoutBtn}>Checkout</button> :\r\n                        \"\"\r\n                    }\r\n                </div> :\r\n                \"\"\r\n            }\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default PurchaseBox;","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NowShowing from \"./NowShowing\";\r\nimport ComingSoon from \"./ComingSoon\";\r\nimport MyContext from \"../MyContext\";\r\nimport Cinemas from \"./Cinemas\";\r\nimport PurchaseBox from \"./PurchaseBox\";\r\n\r\nconst MovieList = () => {\r\n\r\n    const {\r\n        movies, \r\n        cinemas,\r\n        purchaseOn,\r\n        purchaseOnBtn\r\n    } = useContext(MyContext);\r\n\r\n    let movieCinema = cinemas.map(cinema => {\r\n        return(\r\n            <Link to={\"/cinemas/\" + cinema._id} key={cinema._id}>\r\n                <Cinemas\r\n                    cinema={cinema.cinema}\r\n                    hall={cinema.hall}\r\n                    movie={cinema.movie}\r\n                />\r\n            </Link>\r\n        )\r\n    })\r\n\r\n    let filterNowShowing = movies.filter(movie => {\r\n        return movie.status === \"Now Showing\"\r\n    })\r\n\r\n    let filterComingSoon = movies.filter(movie => {\r\n        return movie.status === \"Coming Soon\"\r\n    })\r\n\r\n    let nowShowing = filterNowShowing.map(movie => {\r\n        return(\r\n            <NowShowing\r\n                key={movie._id}\r\n                id={movie._id}\r\n                movie={movie.name}\r\n                image={movie.image}\r\n                location={movie.location}\r\n                genre={movie.genre}\r\n                rating={movie.rating}\r\n                casts={movie.casts}\r\n                description={movie.description}\r\n                status={movie.status}\r\n                purchaseBtn={() => purchaseOnBtn(movie)}\r\n            />\r\n        )\r\n    })\r\n\r\n    let comingSoon = filterComingSoon.map(movie => {\r\n        return(\r\n            <ComingSoon\r\n                key={movie._id}\r\n                id={movie._id}\r\n                movie={movie.name}\r\n                image={movie.image}\r\n                location={movie.location}\r\n                genre={movie.genre}\r\n                rating={movie.rating}\r\n                casts={movie.casts}\r\n                description={movie.description}\r\n                status={movie.status}\r\n                showDate={movie.publishFrom}\r\n            />\r\n        )\r\n    })\r\n\r\n    return(\r\n        <div id=\"movie-list\">\r\n            <div id=\"mov-content\">\r\n                <div id=\"nav-mov\">\r\n                    <Link to=\"/cinema\">Cinema</Link>\r\n                    <Link to=\"/now-showing\">Now Showing</Link>\r\n                    <Link to=\"/coming-soon\">Coming Soon</Link>\r\n                </div>\r\n                {movieCinema}\r\n                {nowShowing}\r\n                {purchaseOn ? <PurchaseBox/> : \"\"}\r\n                {comingSoon}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MovieList;","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass Seats extends React.Component {\r\n\r\n    state = {\r\n        cinema: {\r\n            seats: [],\r\n            movie: {\r\n                name: \"\",\r\n                publishFrom: \"\",\r\n                publishTo: \"\"\r\n            }\r\n        },\r\n        date: \"\"\r\n    }\r\n\r\n    dateChangeHandler = (e) => {\r\n        this.setState({\r\n            date: e.target.value\r\n        })\r\n    }\r\n    \r\n    componentDidMount() {\r\n        axios(\"https://movie-booking-server.herokuapp.com/cinemas/\" + this.props.match.params.id)\r\n        .then(res => {\r\n            let cinema = res.data;\r\n            this.setState({\r\n                cinema: cinema\r\n            })\r\n        })\r\n    }\r\n    \r\n    render() {\r\n\r\n        let cinemaSeats = this.state.cinema.seats.map(seat => {\r\n            return(\r\n                <button key={seat._id} className=\"seat-map\">\r\n                    {seat.seat}\r\n                </button>\r\n            )\r\n        })\r\n\r\n        return(\r\n            <div id=\"seats\">\r\n                <div>\r\n                    {this.state.cinema.cinema} || {this.state.cinema.hall} || {this.state.cinema.movie.name}\r\n                </div>\r\n                <div id=\"select-date\">\r\n                   <label>Select a Date </label>\r\n                   <input \r\n                        type=\"date\"\r\n                        name=\"selectedDate\"\r\n                        value={this.state.date}\r\n                        min={this.state.cinema.movie.publishFrom.slice(0, 10)}\r\n                        max={this.state.cinema.movie.publishTo.slice(0, 10)}\r\n                        onChange={this.dateChangeHandler}\r\n                   />\r\n                </div>\r\n                {cinemaSeats}\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Seats;","import React, { useState } from \"react\";\r\n// import MyContext from \"../MyContext\";\r\n\r\nconst SearchBox = () => {\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n    // const {movies} = useContext(MyContext);\r\n\r\n    let getSearch = (e) => {\r\n        let newSearch = e.target.value;\r\n        setSearch(newSearch);\r\n        console.log(search);\r\n    }\r\n\r\n    // let searchBtn = () => {\r\n    //     movies.map(movie => {\r\n    //         if(search !== \"\" && movie.name.indexOf(search) !== -1) {\r\n    //             return\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    return(\r\n        <div id=\"search-component\">\r\n            <input type=\"text\" placeholder=\"Search a movie...\" className=\"searchbox\" onChange={getSearch}/>\r\n            <button>Search</button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst HomePage = (props) => {\r\n\r\n    let moviesArray = props.movies.map(movie => {\r\n        return(\r\n            <div key={movie._id} className=\"movies-array\">\r\n                <div>\r\n                    {movie.status}\r\n                </div>\r\n                <img \r\n                    alt={movie.name}\r\n                    src={movie.image}\r\n                />\r\n                <div>\r\n                    {movie.name}\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <div id=\"home-page\">\r\n            {moviesArray}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default HomePage;","import React, { useContext } from 'react';\nimport './App.css';\nimport Registration from \"./Registration/Registration\";\nimport Login from \"./Login/Login\";\nimport MyContext from './MyContext';\nimport ProductInfo from \"./ProductInfo/ProductInfo\";\nimport MovieList from \"./MovieList/MovieList\";\nimport { Link } from \"react-router-dom\";\nimport { Route } from \"react-router-dom\";\nimport Seats from \"./MovieList/Seats\";\nimport SearchBox from \"./Search/SearchBox\";\nimport HomePage from \"./HomePage\";\n\nconst App = () => {\n\n  const {\n    isLoggedin,\n    userCredential,\n    userLogin,\n    logout,\n    user,\n    addMovieBtn,\n    movies,\n    updateMovie,\n    seats\n  } = useContext(MyContext);\n\n  let selectedSeat = seats.map(seat => {\n    return seat;\n  })\n\n  return (\n    <div className=\"App\">\n      <header>\n        <Link to=\"/\">\n          <div id=\"logo\">\n            <img \n              src=\"https://i.pinimg.com/originals/90/91/25/909125082e30bbc87ace7cdef68fbb4f.jpg\"\n              alt=\"Boleto Films\"        \n            />\n            <h1>Pelicula</h1>\n          </div>\n        </Link>\n        <SearchBox/>\n        {\n          isLoggedin ? \n          <Link to=\"/\"><button onClick={logout} id=\"logoutBtn\">Logout</button></Link> : \n          <div id=\"sign-in\">\n            <Link to=\"/register\">Register</Link> / <Link to=\"/login\">Sign in</Link>\n          </div>\n        }\n      </header>\n      {\n        isLoggedin ?\n        <div>\n          {\n            user.role === \"Admin\" ?\n            <div>\n              <ProductInfo \n                addMovieBtn={addMovieBtn} \n                movies={movies}\n                updateMovie={updateMovie}\n              />\n            </div> :\n            <div>\n              <MovieList selectedSeat={selectedSeat}/>\n              <Route path=\"/cinemas/:id\" render={(props) => <Seats {...props} movies={movies}/>}/>\n            </div>\n          }\n        </div> :\n        <div>\n          <Route path=\"/\" exact>\n            <div id=\"home\">\n              <h2>Movies</h2>\n              <HomePage movies={movies}/>\n            </div>\n          </Route>\n          <Route path=\"/register\">\n            <Registration userCredential={userCredential} userLogin={userLogin}/>\n          </Route>\n          <Route path=\"/login\">\n            <Login \n              userCredential={userCredential} \n              userLogin={userLogin}\n              user={user}\n            />\n          </Route>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n// registration & login\n// admin should be able to add, remove, edit movies\n// user should be able to search movies\n// user shall be shown an image of the seats from which the desired seats are selected\n// ticket cancelling & payment","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport MyContext from \"./MyContext\";\r\nimport axios from \"axios\";\r\nimport { cloneDeep } from \"lodash\";\r\n\r\nclass MyProvider extends React.Component {\r\n\r\n    userLogin = () => {\r\n        this.setState({\r\n            isLoggedin: true\r\n        })\r\n    }\r\n\r\n    userCredential = (username, password) => {\r\n        axios.post((\"https://movie-booking-server.herokuapp.com/users/login\"), {\r\n            username: username,\r\n            password: password\r\n        }).then(res => {\r\n            if(res.data.error) {\r\n                alert(\"Invalid username/password\");\r\n            } else {\r\n                localStorage.setItem(\"appUser\", JSON.stringify(res.data));\r\n                this.userLogin();\r\n                this.setState({\r\n                    user: res.data\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    logout = () => {\r\n        localStorage.removeItem(\"appUser\");\r\n        this.setState({\r\n            isLoggedin: false\r\n        })\r\n    }\r\n\r\n    addMovieBtn = (newMovie) => {\r\n        axios.post(\"https://movie-booking-server.herokuapp.com/movies\", newMovie)\r\n        .then(res => {\r\n            this.setState({\r\n                movies: [...this.state.movies, res.data]\r\n            })\r\n        })\r\n    }\r\n\r\n    updateMovie = (res) => {\r\n        let updatedMovies = this.state.movies.map(movie => {\r\n            if(res._id === movie._id) {\r\n                return res;\r\n            } else {\r\n                return movie;\r\n            }\r\n        })\r\n        this.setState({\r\n            movies: updatedMovies\r\n        })\r\n    }\r\n\r\n    removeMovie = (e) => {\r\n        let remainedMovie = [...this.state.movies];\r\n        remainedMovie.map(movie => {\r\n            if(e.target.id === movie._id) {\r\n                remainedMovie.splice(remainedMovie.indexOf(movie), 1);\r\n            }\r\n            return remainedMovie;\r\n        })\r\n        this.setState({\r\n            movies: remainedMovie\r\n        })\r\n        axios.delete(\"https://movie-booking-server.herokuapp.com/movies/\" + e.target.id)\r\n    }\r\n\r\n    purchaseOnBtn = (purchasedTicket) => {\r\n        const newTicket = {...purchasedTicket,};\r\n        const ticketIndex = this.state.tickets.findIndex(ticket => {\r\n            return ticket._id === newTicket._id;\r\n        });\r\n        let ticketsCopy = cloneDeep(this.state.tickets);\r\n        let totalPrice = this.state.total + newTicket.price;\r\n        if(ticketIndex > -1) {\r\n            ticketsCopy[ticketIndex].user = this.state.user.username;\r\n            ticketsCopy[ticketIndex].qty = (ticketsCopy[ticketIndex].qty * 1) + 1;\r\n            ticketsCopy[ticketIndex].subTotal += newTicket.price;\r\n        } else {\r\n            newTicket.qty = 1;\r\n            newTicket.subTotal = newTicket.price;\r\n            newTicket.user = this.state.user.username;\r\n            ticketsCopy = [...this.state.tickets, newTicket];\r\n        }\r\n        this.setState({\r\n            purchaseOn: true,\r\n            total: totalPrice,\r\n            tickets: ticketsCopy\r\n        })\r\n    }\r\n\r\n    purchaseOffBtn = () => {\r\n        this.setState({\r\n            purchaseOn: false\r\n        })\r\n    }\r\n\r\n    qtyChangeHandler = (id, qty) => {\r\n        let ticketsCopy = cloneDeep(this.state.tickets);\r\n        let newTotal = 0;\r\n        ticketsCopy = ticketsCopy.map(ticket => {\r\n            if(ticket._id === id) {\r\n                ticket.qty = qty;\r\n                ticket.subTotal = ticket.price * qty;\r\n            }\r\n            newTotal += ticket.subTotal;\r\n            return ticket;\r\n        })\r\n        this.setState({\r\n            tickets: ticketsCopy,\r\n            total: newTotal\r\n        })\r\n    }\r\n\r\n    checkoutBtn = () => {\r\n        axios.post(\"https://movie-booking-server.herokuapp.com/transactions\", {\r\n            tickets: this.state.tickets,\r\n            total: this.state.total\r\n        })\r\n        .then(res => {\r\n            this.setState({\r\n                tickets: [],\r\n                total: 0\r\n            })\r\n        })\r\n    }\r\n\r\n    // searchBtn = (input) => {\r\n    //     axios.post(\"http://localhost:8080/movies/\" + .id, {\r\n    //         movie: input\r\n    //     }).then(res => {\r\n    //         let result = res.data;\r\n    //         if(result.error) {\r\n    //             alert(\"Movie not found\");\r\n    //         } else {\r\n    //             console.log(result);\r\n    //             console.log(this.match.params.id);\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    state = {\r\n        isLoggedin: localStorage.getItem(\"appUser\") ? true : false,\r\n        user: localStorage.getItem(\"appUser\") ? JSON.parse(localStorage.getItem(\"appUser\")) : {},\r\n        movies: [],\r\n        cinemas: [],\r\n        seats: [],\r\n        tickets: [],\r\n        total: 0,\r\n        purchaseOn: false,\r\n        userLogin: this.userLogin,\r\n        userCredential: this.userCredential,\r\n        logout: this.logout,\r\n        addMovieBtn: this.addMovieBtn,\r\n        updateMovie: this.updateMovie,\r\n        removeMovie: this.removeMovie,\r\n        purchaseOnBtn: this.purchaseOnBtn,\r\n        purchaseOffBtn: this.purchaseOffBtn,\r\n        qtyChangeHandler: this.qtyChangeHandler,\r\n        checkoutBtn: this.checkoutBtn,\r\n        searchBtn: this.searchBtn\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios(\"https://movie-booking-server.herokuapp.com/movies\")\r\n        .then(res => {\r\n            let movies = res.data;\r\n            this.setState({\r\n                movies: movies\r\n            })\r\n        })\r\n        axios(\"https://movie-booking-server.herokuapp.com/cinemas\")\r\n        .then(res => {\r\n            let cinemas = res.data;\r\n            this.setState({\r\n                cinemas: cinemas\r\n            })\r\n        })\r\n        axios(\"https://movie-booking-server.herokuapp.com/seats\")\r\n        .then(res => {\r\n            let seats = res.data;\r\n            this.setState({\r\n                seats: seats\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <MyContext.Provider value={this.state}>\r\n                {this.props.children}\r\n            </MyContext.Provider>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default MyProvider;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nimport MyProvider from './MyProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MyProvider>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </MyProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}